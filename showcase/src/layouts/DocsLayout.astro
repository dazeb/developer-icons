---
import Container from "@/components/Container.astro";
import Navbar from "@/components/Navbar.astro";
import { Button } from "@/components/ui/button";
import { MobileDocsMenu } from "@/components/mobileDocsMenu";
import { cn } from "@/lib/utils";
import { publicBaseUrl } from "@/config";
import "@fontsource-variable/noto-sans";
import "../styles/globals.css";
import "../styles/docs.css";

interface Props {
  title: string;
  frontmatter: {
    title: string;
    order: number;
  };
  class: string;
}

const { props, url } = Astro;
const measurementId = import.meta.env.PUBLIC_GA_MEASUREMENT_ID;
const description =
  "Documentation for Developer Icons, an open-source collection of optimized and customizable SVG icons for popular technologies, frameworks, and tools used by developers. Free, scalable, and easy to use.";
const currentUrl = new URL(url);
const fullUrl = `${currentUrl.origin}${currentUrl.pathname}`;
const title = `${props.frontmatter.title} | Developer Icons | Ready-to-use beautiful tech icons library`;

const docs = await Astro.glob("../pages/docs/*.{astro,md}");
const flattenedDocs = docs.map((doc) => {
  return "frontmatter" in doc
    ? doc
    : {
        ...doc,
        frontmatter: {
          title: "Contributing",
          order: 4,
        },
      };
});
flattenedDocs.sort((a, b) => a.frontmatter.order - b.frontmatter.order);
---

<!doctype html>
<html lang="en" class="light">
  <head>
    <meta charset="UTF-8" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      rel="icon"
      type="image/svg+xml"
      href={`${publicBaseUrl}/favicon.svg`}
    />
    <link rel="sitemap" href={`${publicBaseUrl}/sitemap-index.xml`} />
    <meta
      name="keywords"
      content="developer icons documentation, tech stack icons, SVG icons, programming icons, technology icons, framework icons, developer tools, open source, React icons, JavaScript icons, TypeScript icons, web development, frontend development, backend development, programming languages, databases, cloud services, design tools, development tools, webdev resources, free icon library, high quality icons"
      ,
    />
    <link rel="canonical" href={fullUrl} />
    <meta name="author" content="Sandesh Katwal (xandemon)" />

    <meta property="og:type" content="website" />
    <meta property="og:url" content={fullUrl} />
    <meta property="og:title" content={`${title}`} />
    <meta property="og:description" content={description} />
    <meta
      property="og:site_name"
      content="Developer Icons Documentation | Created by xandemon"
    />
    <meta property="og:image" content={`${publicBaseUrl}/preview.png`} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta
      property="og:image:alt"
      content="Documentation for Developer Icons—Beautiful tech stack icon library for developers"
    />
    <meta property="og:locale" content="en_US" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={fullUrl} />
    <meta name="twitter:title" content={`${title}`} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={`${publicBaseUrl}/preview.png`} />
    <meta
      name="twitter:image:alt"
      content="Documentation for Developer Icons—Beautiful tech stack icon library for developers"
    />
    <meta name="twitter:site" content="@xandemon" />
    <meta name="twitter:creator" content="@xandemon" />

    <meta name="robots" content="index, follow" />

    <script is:inline>
      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();
      document.documentElement.classList.add(theme);
    </script>

    <!-- Google tag (gtag.js) -->
    <script
      is:inline
      type="text/partytown"
      src={`https://www.googletagmanager.com/gtag/js?id=${measurementId}`}
    ></script>
    <script is:inline type="text/partytown" define:vars={{ measurementId }}>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function gtag() {
        dataLayer.push(arguments);
      };
      gtag("js", new Date());
      gtag("config", measurementId);
    </script>
  </head>
  <body
    class="text-zinc-700 dark:text-zinc-300 bg-zinc-100 dark:bg-zinc-900 min-h-screen"
  >
    <Navbar />
    <Container
      className="items-stretch justify-start h-[calc(100vh-80px)] pb-0 relative overflow-scroll"
    >
      <aside
        class="hidden w-full max-w-[250px] h-full min-h-full border border-zinc-200 dark:border-zinc-800 rounded-xl lg:flex flex-col gap-2 text-zinc-600 dark:text-zinc-400 p-3 sticky top-0"
      >
        {
          flattenedDocs.map((doc) => (
            <a href={doc.url}>
              <Button
                className={cn(
                  `w-full rounded-lg px-4 py-2 cursor-pointer justify-start`,
                  {
                    "bg-transparent dark:bg-transparent text-zinc-600 dark:text-zinc-400 hover:bg-zinc-200 dark:hover:bg-zinc-700":
                      props.frontmatter.title !== doc.frontmatter.title,
                  }
                )}
              >
                {doc.frontmatter.title}
              </Button>
            </a>
          ))
        }
      </aside>
      <div class="flex flex-col gap-4 lg:p-6 pt-2 h-full">
        <div
          class="flex items-center justify-between w-full gap-2 lg:hidden border-b-2 border-[#e4e4e7]"
        >
          <h1 class="block border-none">
            {
              flattenedDocs.find((doc) => doc.url === url.pathname)?.frontmatter
                .title
            }
          </h1>
          <MobileDocsMenu menuList={flattenedDocs} client:load />
        </div>
        <div
          class={`flex flex-col gap-4 h-full w-full max-lg:[&_h1:first-child]:hidden ${props.class || ""}`}
        >
          <slot />
        </div>
      </div>
    </Container>
  </body>
</html>
